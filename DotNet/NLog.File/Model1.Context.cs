//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NLog.File
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class popsEntities : DbContext
    {
        public popsEntities()
            : base("name=popsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CheckSum> CheckSums { get; set; }
        public virtual DbSet<CheckSumDup> CheckSumDups { get; set; }
    
        public virtual int spCheckSum_ins(string sHA, string folder, string theFileName, string fileExt, Nullable<int> fileSize, Nullable<System.DateTime> fileCreateDt, Nullable<int> timerMs, string notes)
        {
            var sHAParameter = sHA != null ?
                new ObjectParameter("SHA", sHA) :
                new ObjectParameter("SHA", typeof(string));
    
            var folderParameter = folder != null ?
                new ObjectParameter("Folder", folder) :
                new ObjectParameter("Folder", typeof(string));
    
            var theFileNameParameter = theFileName != null ?
                new ObjectParameter("TheFileName", theFileName) :
                new ObjectParameter("TheFileName", typeof(string));
    
            var fileExtParameter = fileExt != null ?
                new ObjectParameter("FileExt", fileExt) :
                new ObjectParameter("FileExt", typeof(string));
    
            var fileSizeParameter = fileSize.HasValue ?
                new ObjectParameter("FileSize", fileSize) :
                new ObjectParameter("FileSize", typeof(int));
    
            var fileCreateDtParameter = fileCreateDt.HasValue ?
                new ObjectParameter("FileCreateDt", fileCreateDt) :
                new ObjectParameter("FileCreateDt", typeof(System.DateTime));
    
            var timerMsParameter = timerMs.HasValue ?
                new ObjectParameter("TimerMs", timerMs) :
                new ObjectParameter("TimerMs", typeof(int));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCheckSum_ins", sHAParameter, folderParameter, theFileNameParameter, fileExtParameter, fileSizeParameter, fileCreateDtParameter, timerMsParameter, notesParameter);
        }
    }
}
